{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyPressedValue","handlerKeyUp","event","setState","code","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,gBAAiB,IAFrB,EAaEC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,gBAAgC,UAAfE,EAAME,KAAmB,QAAUF,EAAMG,OAfhE,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKP,gBAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,gBAV/C,oBAmBE,WACE,IAAQD,EAAoBQ,KAAKT,MAAzBC,gBAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIV,EAAD,mCAE+BA,EAF/B,KACG,kCA1Bd,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.a179f0ab.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  keyPressedValue: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    keyPressedValue: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlerKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handlerKeyUp);\n  }\n\n  handlerKeyUp = (event: KeyboardEvent) => {\n    this.setState({\n      keyPressedValue: event.code === 'Space' ? 'Space' : event.key,\n    });\n  };\n\n  render() {\n    const { keyPressedValue } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!keyPressedValue\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${keyPressedValue}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}